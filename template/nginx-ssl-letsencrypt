
server {

    #listen [::]:443 ssl http2 ipv6only=on; # managed by Certbot
    listen [::]:443 ssl http2; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot

    listen [::]:80;
    listen 80;

    server_name {S_DOMAIN}
    return 404; # managed by Certbot

    if ($host = http://{S_DOMAIN}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ssl_certificate /etc/letsencrypt/live/{S_DOMAIN}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{S_DOMAIN}/privkey.pem; # managed by Certbot

    #ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    root   /var/www/{S_USER_DIR}/{S_DOMAIN}/web/;

    if ($scheme != "https") {
        rewrite ^ https://$http_host$request_uri? permanent;
    }

    index index.html index.htm index.php;

    error_log /var/www/{S_USER_DIR}/{S_DOMAIN}/log/nginx-error.log;
    access_log /var/www/{S_USER_DIR}/{S_DOMAIN}/log/nginx-access.log combined;

    location ~ /\. {
        deny all;
    }

    location ^~ /.well-known/acme-challenge/ {
        access_log off;
        log_not_found off;
        root /var/www/{S_USER_DIR}/{S_DOMAIN}/web/;
        autoindex off;
        index index.html;
        try_files $uri $uri/ =404;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires max;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ \.php$ {
        try_files /5620d9855f5bb769a60be51975fb247d.htm @php;
    }

    location @php {
        try_files $uri =404;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass 127.0.0.1:{S_SOCKET};
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_intercept_errors on;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

}

